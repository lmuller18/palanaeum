datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String  @id @default(cuid())
  email      String  @unique
  username   String
  avatar     String
  background String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  managedClubs Club[]
  members      Member[]
  password     Password?
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Club {
  id    String @id @default(cuid())
  title String
  image String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner    User      @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  chapters Chapter[]
  members  Member[]

  ownerId String
}

model Chapter {
  id    String @id @default(cuid())
  title String
  order Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  club     Club       @relation(fields: [clubId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Progress Progress[]

  clubId String
}

model Member {
  id      String  @id @default(cuid())
  isOwner Boolean @default(false)
  removed Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user     User       @relation(fields: [userId], references: [id], onUpdate: Cascade)
  club     Club       @relation(fields: [clubId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  progress Progress[]

  userId String
  clubId String
}

model Progress {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  completedAt DateTime @default(now())
  member      Member   @relation(fields: [memberId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  chapter     Chapter  @relation(fields: [chapterId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  memberId  String
  chapterId String

  @@id([memberId, chapterId])
}
